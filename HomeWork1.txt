1.What is a Repository?
	Repository is a central location in which data is stored and managed.

	Depending on how the term is used, a repository may be directly accessible to users or may be a place from which specific databases, files, or documents are obtained for further relocation or distribution in a network. A repository may be just the aggregation of data itself into some accessible place of storage or it may also imply some ability to selectively extract data.

	Or a repository can be a location that is directly accessible to the user without having to travel across a network.

  Why to use a repository?
  	Data can be stored based upon lots of criteria.
  	This arose concepts like relational database, NoSQL database, etc,..

  	What are repositories good at?
  		Hierarchical data
  		File storage
  		Flexible data structure
  		Rigid data structure
  		Searching for data
  		Observing data
  		Transactions
  		Navigation-based access
  		Programmatic API
  		Versioning
  		Locking
  		References

  	What are repositories bad at?
  		Flat, unorganized data
  		Bulk declarative update
  		Massively large file storage
  		Access by non-JVM languages
  		Complex merging of versions

  	Increasingly, though, people are using new kinds of repositories that have little or no connection to traditional libraries. Some of these repositories are on their users’ own computers– their digital music collection and photo library, managed by programs like ITunes, IPhoto, and Picasa. Some of these repositories are on Internet sites like YouTube, Flickr, Google Docs and Google Base, and the various WikiMedia sites. We often don’t think of all of these as “repositories”, but that’s how people are using them: to manage and provide access to information in a stable way, potentially over a long period of time.

	I’m not using “repository” here to mean just “glorified filesystem or website”. The everyday repositories I mention above typically put substantial effort into managing metadata, supporting discovery, providing for access control (and often backup and version control), and supporting long-term access and use of the content. They tend to do all these things much more quietly and unobtrusively than the repositories typically designed for and marketed to libraries, but that’s a feature, not a bug.


	References:
		https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=what%20is%20a%20repository

		http://searchoracle.techtarget.com/definition/repository

		http://www.webopedia.com/TERM/R/repository.html

		https://docs.jboss.org/author/display/MODE/Why+use+a+repository?_sscc=t

		https://everybodyslibraries.com/2008/05/07/everybodys-repositories-first-of-a-series/


2.What is GIT
	Git is a version control system that is used for software development and other version control tasks.

  Why use GIT
  	It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.

  References:
  	https://www.atlassian.com/git/tutorials/what-is-git

  	https://git-scm.com/

  	https://en.wikipedia.org/wiki/Git

  	http://sixrevisions.com/git/why-you-should-use-git/

  	https://www.youtube.com/watch?v=uS8ROhoLN7Y


3.What is GitHub
	GitHub is a web-based Git repository hosting service. 

  Why use GitHub
  	It offers all of the distributed version control and source code management (SCM) functionality of Git as well as adding its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.

  References:
  	https://en.wikipedia.org/wiki/GitHub

  	http://www.howtogeek.com/180167/htg-explains-what-is-github-and-what-do-geeks-use-it-for/

  	https://techcrunch.com/2012/07/14/what-exactly-is-github-anyway/

  	https://www.upwork.com/hiring/development/what-is-github-and-why-should-your-digital-team-use-it/


4.Difference between Git and GitHub
	GitHub is a repository and Git consists of all the commands that are required to get to a repository, modify the data in a repository.

5.Source Tree
	Source Tree is a GUI client for Git repository.
	Provides easy access to repository instead of command-line